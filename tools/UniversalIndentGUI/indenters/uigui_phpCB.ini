[header]
categories=General
cfgFileParameterEnding=" "
configFilename=
fileTypes=*.php|*.htm|*.html|*.xhtml
indenterFileName=phpCB
indenterName=PHP Code Beautifier (PHP)
inputFileName=indentinput
inputFileParameter=
manual=http://www.waterproof.fr/products/phpCodeBeautifier/manual.php
outputFileName=
outputFileParameter=stdout
parameterOrder=pio
showHelpParameter=-h
stringparaminquotes=false
useCfgFileParameter=
version=2007-02-21

[Align all assignement statements]
Category=0
Description=<html>Align all assignement statements</html>
EditorType=boolean
TrueFalse=--align-equal-statements|
ValueDefault=1

[Align all assignement statements to a fixed position]
CallName="--align-equal-statements-to-fixed-pos "
Category=0
Description="<html>Align all assignement statements to a fixed position.<hr><table><thead><tr><td width='50%'>Source</td><td width='50%'>With --align-equal-statements-to-fixed-pos 40</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php <br>$noError = true; <br>$feildEmpty = false; <br>$showMessage = false; <br>$showMessage = false; <br>$anotherVariable[0123] = 'bla bla bla'; <br>$showBlaBlaBlaMessage = false; <br>?&gt;</pre></td><td width='50%'><pre>&lt;?php <br>$noError<span>                              </span> = true; <br>$feildEmpty<span>                           </span> = false; <br>$showMessage<span>                          </span> = false; <br>$showMessage<span>                          </span> = false; <br>$anotherVariable[0123]<span>                </span> = 'bla bla bla'; <br>$showBlaBlaBlaMessage<span>                 </span> = false; <br>?&gt; </pre></td></tr></tbody></table></html>"
EditorType=numeric
Enabled=false
MaxVal=60
MinVal=4
ValueDefault=30

[Allow to insert a space after '(']
Category=0
Description=<html>Allow to insert a space after start bracket '('</html>
EditorType=boolean
TrueFalse=--space-after-start-bracket|
ValueDefault=0

[Allow to insert a space after 'if']
Category=0
Description=<html>Allow to insert a space after 'if' keyword</html>
EditorType=boolean
TrueFalse=--space-after-if|
ValueDefault=1

[Allow to insert a space after 'switch']
Category=0
Description=<html>Allow to insert a space after 'switch' keyword</html>
EditorType=boolean
TrueFalse=--space-after-switch|
ValueDefault=1

[Allow to insert a space after 'while']
Category=0
Description=<html>Allow to insert a space after 'while' keyword</html>
EditorType=boolean
TrueFalse=--space-after-while|
ValueDefault=1

[Allow to insert a space after '}']
Category=0
Description=<html>Allow to insert a space after starting angle bracket '}'</html>
EditorType=boolean
TrueFalse=--space-after-end-angle-bracket|
ValueDefault=1

[Allow to insert a space before ')']
Category=0
Description=<html>Allow to insert a space before end bracket ')'</html>
EditorType=boolean
TrueFalse=--space-before-end-bracket|
ValueDefault=0

[Allow to insert a space before '{']
Category=0
Description=<html>Allow to insert a space before starting angle bracket '{'</html>
EditorType=boolean
TrueFalse=--space-before-start-angle-bracket|
ValueDefault=1

[Change comments]
Category=0
Description="<html>Change '# ...' comments into '// ...' comments<hr><table><thead><tr><td width='33%'>Source</td><td width='33%'>With --change-shell-comment-to-double-slashes-comment</td><td width='33%'>Without --change-shell-comment-to-double-slashes-comment</td></tr></thead><tbody><tr><td width='33%'><pre>&lt;?php<br><br>#comment content<br>//another comment<br>?&gt;</pre></td><td width='33%'><pre>&lt;?php<br><br>// comment content<br>// another comment<br>?&gt;</pre></td><td width='33%'><pre>&lt;?php<br><br># comment content<br>// another comment<br>?&gt;</pre></td></tr></tbody></table></html>"
EditorType=boolean
TrueFalse=--change-shell-comment-to-double-slashes-comment|
ValueDefault=1

[Comment render style]
Category=0
Choices="--comment-rendering-style PEAR|--comment-rendering-style PHPDoc"
ChoicesReadable="PEAR comment rendering style|PHPDoc comment rendering style"
Description="<html>The following style of comment formating are available:<hr><table><thead><tr><td width='50%'><b>--comment-rendering-style</b> PEAR</td><td width='50%'><b>--comment-rendering-style</b> PHPDoc</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php<br><br>/**<br> * bla bla bla<br> *<br> * @access public<br> */<br>?&gt;</pre></td><td width='50%'><pre>&lt;?php<br><br>/**<br>* bla bla bla<br>*<br>* @access public<br>*/<br>?&gt;</pre></td></tr></tbody></table></html>"
EditorType=multiple
Enabled=true
ValueDefault=0

[Force large PHP code tag]
Category=0
Description="<html>Change '&lt;?' and '&lt;%' tokens into '&lt;?php' and '%&gt;' into '?&gt;'</html>"
EditorType=boolean
TrueFalse=--force-large-php-code-tag|
ValueDefault=1

[Glue "&&" to following item]
Category=0
Description="<html>Glue '&' to following item<hr><table><thead><tr><td width='50%'>With --glue-amperscore</td><td width='50%'>Without --glue-amperscore</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php<br>$value = &amp;$objectInstance;<br>?&gt;</pre></td><td width='50%'><pre>&lt;?php<br>$value = &amp; $objectInstance;<br>?&gt;</pre></td><br></tr></tbody></table></html>"
EditorType=boolean
TrueFalse=--glue-amperscore|
ValueDefault=1

[Increase padding before case statements]
Category=0
Description="<html>Increase padding before case statements:<hr><table><thead><tr><td width='50%'>With --extra-padding-for-case-statement</td><td width='50%'>Without --extra-padding-for-case-statement</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php<br><br>switch($condition){<br><span>    </span>case 1:<br><span>    </span>    action1();<br><span>    </span>    break;<br><span>    </span>case 2:<br><span>    </span>    action2();<br><span>    </span>    break;<br><span>    </span>default:<br><span>    </span>    defaultaction();<br><span>    </span>    break;<br>}<br>?&gt;</pre></td><td width='50%'><pre>&lt;?php<br><br>switch($condition){<br>case 1:<br>    action1();<br>    break;<br>case 2:<br>    action2();<br>    break;<br>default:<br>    defaultaction();<br>    break;<br>}<br>?&gt;</pre></td></tr></tbody></table></html>"
EditorType=boolean
TrueFalse=--extra-padding-for-case-statement|
ValueDefault=0

[Indent with TAB]
Category=0
Description="<html>If selected, tabulation (ASCII #9) character is used to indent text, elsewhere space (ASCII #32) character is used</html>"
EditorType=boolean
TrueFalse=--indent-with-tab|
ValueDefault=0

[Lowercase for NULL, TRUE and FALSE constants]
Category=0
Description="<html>Lowercase for NULL, TRUE and FALSE constants as encouraged in PEAR coding standards<hr><table><thead><tr><td width='50%'>With --force-true-false-null-contant-lowercase</td><td width='50%'>Without --force-true-false-null-contant-lowercase</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php<br>if(<strong>true</strong>){<br>    if(<strong>false</strong>){<br>        $value = <strong>null</strong>;<br>    }<br>}<br>?&gt;</pre></td><td width='50%'><pre>&lt;?php<br>if(<strong>TRUE</strong>){<br>    if(<strong>FALSE</strong>){<br>        $value = <strong>NULL</strong>;<br>    }<br>}<br>?&gt;</pre></td></tr></tbody></table></html>"
EditorType=boolean
TrueFalse=--force-true-false-null-contant-lowercase|
ValueDefault=1

[Padding char count]
CallName="--padding-char-count "
Category=0
Description=<html>Indent using # spaces per indent</html>
EditorType=numeric
Enabled=false
MaxVal=8
MinVal=0
ValueDefault=4

[Use "One true brace" formating for functions]
Category=0
Description="<html>Use 'One true brace' formating for functions<hr><table><thead><tr><td width='50%'>With --one-true-brace-function-declaration</td><td width='50%'>Without --one-true-brace-function-declaration</td></tr></thead><tbody><tr><td width='50%'><pre>&lt;?php<br><br>function aFunction($param)<br>{<br>    // function content<br>}<br>?&gt;</pre></td><td width='50%'><pre>&lt;?php<br><br>function aFunction($param) {<br>    // function content<br>}<br>?&gt;</pre></td></tr></tbody></table></html>"
EditorType=boolean
TrueFalse=--one-true-brace-function-declaration|
ValueDefault=1
